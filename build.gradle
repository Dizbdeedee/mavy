buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "chickenbones"
            url = "http://chickenbones.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
	maven {
		name = "chickenbones"
		url = "http://chickenbones.net/maven"
	}
}



wrapper {
    gradleVersion = "4.4.1"
    jarFile = "./wrapper/gradle-wrapper.jar"
}

apply plugin: 'forge'

version = "0.01"
group= "com.dizzydefiler.mavy" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "mavy"

minecraft {
    version = "1.7.10-10.13.4.1558-1.7.10"
    runDir = "eclipse"

}

jar {
    manifest {
        attributes 'ModSide': 'CLIENT'
    }
}

dependencies {
    compile files("libs/CodeChickenCore-1.7.10-1.0.7.47-universal.jar")
    compile files("libs/CodeChickenLib-1.7.10-1.1.3.140-universal.jar")
    compile files("libs/NotEnoughItems-1.7.10-2.1.5-GTNH-universal.jar")
}

processResources {
    // this will ensure that this task is redone when the versions change.

    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '*.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version

    }

}

//sourceSets { main { output.resourcesDir = output.classesDir } }

